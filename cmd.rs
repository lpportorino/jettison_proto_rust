// This file is @generated by prost-build.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Root {
    #[prost(uint32, tag = "1")]
    pub protocol_version: u32,
    #[prost(uint32, tag = "2")]
    pub session_id: u32,
    #[prost(bool, tag = "3")]
    pub important: bool,
    #[prost(bool, tag = "4")]
    pub from_cv_subsystem: bool,
    #[prost(enumeration = "super::ser::JonGuiDataClientType", tag = "5")]
    pub client_type: i32,
    #[prost(
        oneof = "root::Payload",
        tags = "20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34"
    )]
    pub payload: ::core::option::Option<root::Payload>,
}
/// Nested message and enum types in `Root`.
pub mod root {
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Payload {
        #[prost(message, tag = "20")]
        DayCamera(super::day_camera::Root),
        #[prost(message, tag = "21")]
        HeatCamera(super::heat_camera::Root),
        #[prost(message, tag = "22")]
        Gps(super::gps::Root),
        #[prost(message, tag = "23")]
        Compass(super::compass::Root),
        #[prost(message, tag = "24")]
        Lrf(super::lrf::Root),
        #[prost(message, tag = "25")]
        LrfCalib(super::lrf_calib::Root),
        #[prost(message, tag = "26")]
        Rotary(super::rotary_platform::Root),
        #[prost(message, tag = "27")]
        Osd(super::osd::Root),
        #[prost(message, tag = "28")]
        Ping(super::Ping),
        #[prost(message, tag = "29")]
        Noop(super::Noop),
        #[prost(message, tag = "30")]
        Frozen(super::Frozen),
        #[prost(message, tag = "31")]
        System(super::system::Root),
        #[prost(message, tag = "32")]
        Cv(super::cv::Root),
        #[prost(message, tag = "33")]
        DayCamGlassHeater(super::day_cam_glass_heater::Root),
        #[prost(message, tag = "34")]
        Lira(super::lira::Root),
    }
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Ping {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Noop {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Frozen {}
