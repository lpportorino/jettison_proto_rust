// This file is @generated by prost-build.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Root {
    #[prost(
        oneof = "root::Cmd",
        tags = "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15"
    )]
    pub cmd: ::core::option::Option<root::Cmd>,
}
/// Nested message and enum types in `Root`.
pub mod root {
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Cmd {
        #[prost(message, tag = "1")]
        Measure(super::Measure),
        #[prost(message, tag = "2")]
        ScanOn(super::ScanOn),
        #[prost(message, tag = "3")]
        ScanOff(super::ScanOff),
        #[prost(message, tag = "4")]
        Start(super::Start),
        #[prost(message, tag = "5")]
        Stop(super::Stop),
        #[prost(message, tag = "6")]
        TargetDesignatorOff(super::TargetDesignatorOff),
        #[prost(message, tag = "7")]
        TargetDesignatorOnModeA(super::TargetDesignatorOnModeA),
        #[prost(message, tag = "8")]
        TargetDesignatorOnModeB(super::TargetDesignatorOnModeB),
        #[prost(message, tag = "9")]
        EnableFogMode(super::EnableFogMode),
        #[prost(message, tag = "10")]
        DisableFogMode(super::DisableFogMode),
        #[prost(message, tag = "11")]
        SetScanMode(super::SetScanMode),
        #[prost(message, tag = "12")]
        NewSession(super::NewSession),
        #[prost(message, tag = "13")]
        GetMeteo(super::GetMeteo),
        #[prost(message, tag = "14")]
        RefineOn(super::RefineOn),
        #[prost(message, tag = "15")]
        RefineOff(super::RefineOff),
    }
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetMeteo {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Start {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Stop {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Measure {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ScanOn {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ScanOff {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RefineOff {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RefineOn {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TargetDesignatorOff {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TargetDesignatorOnModeA {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TargetDesignatorOnModeB {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EnableFogMode {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct DisableFogMode {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SetScanMode {
    #[prost(enumeration = "super::super::ser::JonGuiDataLrfScanModes", tag = "1")]
    pub mode: i32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct NewSession {}
